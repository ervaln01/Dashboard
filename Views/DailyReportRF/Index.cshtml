@{ Layout = ""; }
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="theme-color" content="#111152" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <title>Daily report RF</title>
    <link rel="shortcut icon" type="image/png" href="~/favicon.ico" />
    <link rel="stylesheet" href="~/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/MainStyle.css" />
    <link rel="icon" href="~/img/FShift.jpg" />
    <link rel="icon" href="~/img/SShift.jpg" />
    <link rel="icon" href="~/img/TShift.jpg" />
    <script src="~/js/jquery-3.5.1.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="~/js/chart.js"></script>
    <script src="~/js/chartjs-plugin-datalabels.js"></script>
    <script src="~/js/Chart.roundedBarCharts.min.js"></script>
    <script src="~/js/chartjs-annotation.min.js"></script>
    <script src="~/js/chartjs-doughnutlabel.js"></script>
    <script src="~/js/kirBarShiftScript.js"></script>
    <script src="~/js/kirBarChartScript.js"></script>
</head>
@switch (ViewBag.Error)
{
@case "none":
    {
<body>
    <div class="container-fluid h-full d-flex align-items-stretch flex-column">
        <div class="row h-2row-quarter">
            <div class="col-lg-4 col-xl-4 p-1 h-100">
                <div class="card text-center t-card">
                    <div id="RFlineName" class="card-header"></div>
                    <div class="card-body p-1">
                        <p id="RFtotalQty" class="value"></p>
                    </div>
                </div>
            </div>
            <div class="col-lg-8 col-xl-8 p-1 h-100">
                <div class="card-group text-center s-cards">
                    @for (var shiftNumder = 1; shiftNumder <= ViewBag.ShiftCount; shiftNumder++)
                            {
                    <div class="card">
                        <div class="card-header" id="@string.Concat("RFshift", shiftNumder)"></div>
                        <div class="card-body p-2">
                            <div class="placeholder" id="@string.Concat("RFwait", shiftNumder)">
                                <div class="@string.Concat("theImg", shiftNumder)"></div>
                            </div>
                            <canvas id="@string.Concat("RFchart", shiftNumder)" style="margin: auto"></canvas>
                        </div>
                    </div>
                            }
                </div>
            </div>
        </div>
        <div class="row h-2row-quarter">
            <div class="col-xs-12 col-xl-12 p-1 h-100">
                <div class="card text-center hp-card">
                    <div id="RFhName" class="card-header"></div>
                    <div class="card-body p-1">
                        <canvas id="RFhp-chart" style="margin: auto"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        setInterval(() => $.ajax({
            url: "@Url.Action("ChangeLang")",
            type: "GET",
            success: (response) => {
                $("#RFlineName").text(response.lineName);
                $("#RFhName").text(response.hName);
                for (var shiftNumber = 1; shiftNumber <= @ViewBag.ShiftCount; shiftNumber++)
                    $("#RFshift" + shiftNumber).text(response.shift + " " + shiftNumber);
            }
        }), 3000);
    </script>
    <script>
        let RFchart = Render($("#RFhp-chart"),  @Json.Serialize(ViewBag.Labels), 15);

        setInterval(() => $.ajax({
            url: "@Url.Action("Update")",
            type: "GET",
            success: (response) => FillData(response.production, RFchart, $("#RFtotalQty"))
        }), 1000);
    </script>
    <script>
        var prod = @Json.Serialize(ViewBag.ShiftProduction);
        var plan = @Json.Serialize(ViewBag.Plan);
        for (var shiftNumber = 0; shiftNumber < @ViewBag.ShiftCount; shiftNumber++) {
            var waitCtx = $("#RFwait" + (shiftNumber + 1));
            var chart = CreateShiftBar($("#RFchart" + (shiftNumber + 1)), shiftNumber, waitCtx);
            RenderShiftBar(chart, [prod[shiftNumber], plan[shiftNumber]], waitCtx, "@Url.Action("UpdateShift")", shiftNumber);
        }
    </script>
    <script>
        setInterval(() => $.ajax({
            url: "@Url.Action("Refresh")",
            type: "GET",
            success: (response) => { if (response) document.location.reload(); }
        }), 2000);
    </script>
</body>
        break;
    }
@case "plan":
{
<body>
    <div style="height: 100%; font-size: 4em; text-align: center">
        <p style="padding-top:3em">На линии холодильников</p>
        <p>не загружен план</p>
    </div>
    <script>
        setInterval(() => document.location.reload(), 3000);
    </script>
</body>
    break;
}
@case "line":
{
<body>
    <div style="height: 100%; font-size: 4em; text-align: center">
        <p style="padding-top:3em">На линии холодильников</p>
        <p>не загружены смены</p>
    </div>
    <script>
        setInterval(() => document.location.reload(), 3000);
    </script>
</body>
    break;
}
}
</html>